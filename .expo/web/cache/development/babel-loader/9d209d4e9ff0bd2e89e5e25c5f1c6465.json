{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programering\\\\ManhuntApp\\\\App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport styles from \"./Styles\";\nimport React, { useState } from 'react';\nexport default function App() {\n  return React.createElement(View, {\n    style: styles.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, \"WorldScape\")), React.createElement(View, {\n    style: styles.huntedButtons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    title: 'Hunter',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.huntedButtons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    title: 'Hunted',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  })), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar useGeoLocation = function useGeoLocation() {\n  cons[239124] = useState({\n    loaded: false,\n    coordinates: {\n      lat: \"\",\n      lng: \"\"\n    }\n  });\n\n  var onSuccess = function onSuccess(location) {\n    setLocation({\n      loaded: true,\n      coordinates: {\n        lat: location.coords.latitude,\n        lng: location.coords.longitude\n      }\n    });\n  };\n\n  var onError = function onError(error) {\n    setLocation({\n      loaded: true,\n      error: error\n    });\n  };\n\n  useEffect(function () {\n    if (!(\"geolocation\" in navigator)) {\n      onError({\n        code: 0,\n        message: \"Geolocation not supported\"\n      });\n    }\n\n    navigator.geolocation.getCurrentPosition(onSuccess, onError);\n  }, [input]);\n  return location;\n};","map":{"version":3,"sources":["D:/Programering/ManhuntApp/App.js"],"names":["StatusBar","styles","React","useState","App","body","title","huntedButtons","useGeoLocation","cons","loaded","coordinates","lat","lng","onSuccess","location","setLocation","coords","latitude","longitude","onError","error","useEffect","navigator","code","message","geolocation","getCurrentPosition","input"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;;;;;;AAEA,OAAOC,MAAP;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAGA,eAAe,SAASC,GAAT,GAAe;AAC5B,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACI,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF,EAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACM,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,EAOE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACM,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,EAWE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAYE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF;AAgBD;;AAKD,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3BC,EAAAA,IAAI,CAAC,MAAD,CAAJ,GAAeN,QAAQ,CAAC;AACtBO,IAAAA,MAAM,EAAE,KADc;AAEtBC,IAAAA,WAAW,EAAE;AAAEC,MAAAA,GAAG,EAAE,EAAP;AAAWC,MAAAA,GAAG,EAAE;AAAhB;AAFS,GAAD,CAAvB;;AAKA,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,QAAQ,EAAI;AAC5BC,IAAAA,WAAW,CAAC;AACVN,MAAAA,MAAM,EAAE,IADE;AAEVC,MAAAA,WAAW,EAAE;AACXC,QAAAA,GAAG,EAAEG,QAAQ,CAACE,MAAT,CAAgBC,QADV;AAEXL,QAAAA,GAAG,EAAEE,QAAQ,CAACE,MAAT,CAAgBE;AAFV;AAFH,KAAD,CAAX;AAOD,GARD;;AAUA,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK,EAAI;AACvBL,IAAAA,WAAW,CAAC;AACVN,MAAAA,MAAM,EAAE,IADE;AAEVW,MAAAA,KAAK,EAALA;AAFU,KAAD,CAAX;AAID,GALD;;AAOAC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,EAAE,iBAAiBC,SAAnB,CAAJ,EAAmC;AACjCH,MAAAA,OAAO,CAAC;AACNI,QAAAA,IAAI,EAAE,CADA;AAENC,QAAAA,OAAO,EAAE;AAFH,OAAD,CAAP;AAID;;AAEDF,IAAAA,SAAS,CAACG,WAAV,CAAsBC,kBAAtB,CAAyCb,SAAzC,EAAoDM,OAApD;AACD,GATQ,EASN,CAACQ,KAAD,CATM,CAAT;AAWA,SAAOb,QAAP;AACD,CAnCD","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport { Text, View, Button, Linking, TextInput } from 'react-native';\r\nimport styles from \"./Styles\";\r\nimport React, { useState } from 'react';\r\n\r\n\r\nexport default function App() {\r\n  return (\r\n    <View style={styles.body}>\r\n      <View style={styles.body}>\r\n        <Text style={styles.title}>WorldScape</Text>\r\n      </View>\r\n      <View style={styles.huntedButtons}>\r\n        <Button title={'Hunter'}></Button>\r\n      </View>\r\n      <View style={styles.huntedButtons}>\r\n        <Button title={'Hunted'}></Button>\r\n      </View>\r\n\r\n      <Text></Text>\r\n      <StatusBar style=\"auto\" />\r\n    </View>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nconst useGeoLocation = () => {\r\n  cons[239124] = useState({\r\n    loaded: false,\r\n    coordinates: { lat: \"\", lng: \"\" }\r\n  });\r\n\r\n  const onSuccess = location => {\r\n    setLocation({\r\n      loaded: true,\r\n      coordinates: {\r\n        lat: location.coords.latitude,\r\n        lng: location.coords.longitude,\r\n      },\r\n    });\r\n  };\r\n\r\n  const onError = error => {\r\n    setLocation({\r\n      loaded: true,\r\n      error,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!(\"geolocation\" in navigator)) {\r\n      onError({\r\n        code: 0,\r\n        message: \"Geolocation not supported\",\r\n      });\r\n    }\r\n\r\n    navigator.geolocation.getCurrentPosition(onSuccess, onError);\r\n  }, [input])\r\n\r\n  return location;\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}