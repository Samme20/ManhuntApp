{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Programering\\\\ManhuntApp\\\\App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport * as Location from \"expo-location\";\nimport { StatusBar } from 'expo-status-bar';\nimport styles from \"./Styles\";\nimport { HunterButton } from \"./Hunter\";\nimport { HuntedButton } from \"./Hunted\";\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      location: null,\n      errorMessage: null,\n      data: 'no data...',\n      address: 'loading....'\n    };\n\n    _this._getLocationAsync = function _callee() {\n      var _await$Permissions$as, status, location, data, geocode, myKey, pathString;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.LOCATION));\n\n            case 2:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n\n              if (status !== 'granted') {\n                _this.setState({\n                  errorMessage: 'Permission to access location was denied'\n                });\n              }\n\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n            case 7:\n              location = _context.sent;\n              data = Location.reverseGeocodeAsync(location).then(function (d) {\n                _this.setState({\n                  data: d\n                });\n              });\n\n              _this.setState({\n                data: data\n              });\n\n              _context.next = 12;\n              return _regeneratorRuntime.awrap(Location.reverseGeocodeAsync({\n                latitude: location.coords.latitude,\n                longitude: location.coords.longitude\n              }));\n\n            case 12:\n              geocode = _context.sent;\n              console.log(\"Geocode:\");\n\n              _this.setState({\n                data: geocode\n              });\n\n              console.log(geocode);\n              myKey = \"AIzaSyDD_eb3hyM9ql9HRoFbslOtQiFNdTH2U9U\";\n              pathString = \"https://maps.googleapis.com/maps/api/geocode/json?address=1600+Amphitheatre+Parkway,+Mountain+View,+CA&//key=\" + myKey;\n              fetch('https://maps.googleapis.com/maps/api/geocode/json?address=' + location.coords.latitude + ',' + location.coords.latitude + '&key=' + myKey).then(function (response) {\n                return response.json();\n              }).then(function (responseJson) {\n                var address = 'ADDRESS GEOCODE is BACK!! => ' + JSON.stringify(responseJson);\n\n                _this.setState({\n                  address: address\n                });\n\n                console.log(address);\n              }).catch(function (error) {\n                _this.setState({\n                  address: error\n                });\n              });\n\n              _this.setState({\n                location: location\n              });\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (Platform.OS === 'android' && !Constants.isDevice) {\n        this.setState({\n          errorMessage: 'Oops, this will not work on Sketch in an Android emulator. Try it on your device!'\n        });\n      } else {\n        this._getLocationAsync();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var text = 'Waiting..';\n      var data = 'loading';\n\n      if (this.state.errorMessage) {\n        text = this.state.errorMessage;\n      } else if (this.state.location) {\n        text = JSON.stringify(this.state.location);\n        data = JSON.stringify(this.state.data);\n      }\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.paragraph,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }\n      }, text), React.createElement(Text, {\n        style: styles.paragraph,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      }, data), React.createElement(Text, {\n        style: styles.paragraph,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }\n      }, this.state.address));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };\n{}","map":{"version":3,"sources":["D:/Programering/ManhuntApp/App.js"],"names":["React","Component","Location","StatusBar","styles","HunterButton","HuntedButton","App","state","location","errorMessage","data","address","_getLocationAsync","Permissions","askAsync","LOCATION","status","setState","getCurrentPositionAsync","reverseGeocodeAsync","then","d","latitude","coords","longitude","geocode","console","log","myKey","pathString","fetch","response","json","responseJson","JSON","stringify","catch","error","Platform","OS","Constants","isDevice","text","container","paragraph"],"mappings":"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","sourcesContent":["//Import React\r\nimport React, { Component } from 'react';\r\nimport { Platform } from 'react-native';\r\nimport * as Location from \"expo-location\";\r\n//Import Commands\r\nimport { StatusBar } from 'expo-status-bar';\r\n//Import Files\r\nimport styles from \"./Styles\";\r\nimport { HunterButton } from './Hunter';\r\nimport { HuntedButton } from './Hunted';\r\n\r\n\r\n\r\n// MAIN //\r\nexport default class App extends Component {\r\n  state = {\r\n    location: null,\r\n    errorMessage: null,\r\n    data: 'no data...',\r\n    address: 'loading....'\r\n  };\r\n\r\n  componentWillMount() {\r\n    if (Platform.OS === 'android' && !Constants.isDevice) {\r\n      this.setState({\r\n        errorMessage: 'Oops, this will not work on Sketch in an Android emulator. Try it on your device!',\r\n      });\r\n    } else {\r\n\r\n      this._getLocationAsync();\r\n    }\r\n  }\r\n\r\n  _getLocationAsync = async () => {\r\n    let { status } = await Permissions.askAsync(Permissions.LOCATION);\r\n    if (status !== 'granted') {\r\n      this.setState({\r\n        errorMessage: 'Permission to access location was denied',\r\n      });\r\n    }\r\n\r\n    let location = await Location.getCurrentPositionAsync({});\r\n    let data = Location.reverseGeocodeAsync(location).then(d => {\r\n      this.setState({ data: d });\r\n    })\r\n    this.setState({ data });\r\n\r\n    let geocode = await Location.reverseGeocodeAsync({ latitude: location.coords.latitude, longitude: location.coords.longitude });\r\n    console.log(\"Geocode:\");\r\n    this.setState({ data: geocode });\r\n    console.log(geocode);\r\n\r\n    // https://maps.googleapis.com/maps/api/geocode/json?address=1600+Amphitheatre+Parkway,+Mountain+View,+CA&key=AIzaSyC8usJTF5Kda7b5_Xga0jm_FkyepaxCgEE  \r\n\r\n    //https://maps.googleapis.com/maps/api/geocode/json?address=1600+Amphitheatre+Parkway,+Mountain+View,+CA&//key=AIzaSyDD_eb3hyM9ql9HRoFbslOtQiFNdTH2U9U\r\n\r\n    let myKey = \"AIzaSyDD_eb3hyM9ql9HRoFbslOtQiFNdTH2U9U\";\r\n    let pathString = `https://maps.googleapis.com/maps/api/geocode/json?address=1600+Amphitheatre+Parkway,+Mountain+View,+CA&//key=${myKey}`;\r\n\r\n    fetch('https://maps.googleapis.com/maps/api/geocode/json?address=' + location.coords.latitude + ',' + location.coords.latitude + '&key=' + myKey)\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n        let address = 'ADDRESS GEOCODE is BACK!! => ' + JSON.stringify(responseJson);\r\n        this.setState({ address });\r\n        console.log(address);\r\n      }).catch(error => {\r\n        this.setState({ address: error });\r\n      })\r\n\r\n    this.setState({ location });\r\n    //this.setState({ data });\r\n  };\r\n\r\n  render() {\r\n    let text = 'Waiting..';\r\n    let data = 'loading';\r\n    if (this.state.errorMessage) {\r\n      text = this.state.errorMessage;\r\n    } else if (this.state.location) {\r\n      text = JSON.stringify(this.state.location);\r\n      data = JSON.stringify(this.state.data);\r\n    }\r\n\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text style={styles.paragraph}>{text}</Text>\r\n        <Text style={styles.paragraph}>{data}</Text>\r\n        <Text style={styles.paragraph}>{this.state.address}</Text>\r\n      </View>\r\n\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n{/* <View style={styles.body}>\r\n  <StatusBar style=\"auto\" />\r\n\r\n  <View style={styles.content1}>\r\n    <Text style={styles.title}>WorldScape</Text>\r\n  </View>\r\n\r\n  <View>\r\n    {!this.state.ready &&\r\n      (<Text style={styles.text}>No known location</Text>)}\r\n    {this.state.ready &&\r\n      (<Text style={styles.text}>Latitude: {this.state.where.lat} Longitude: {this.state.where.lat}</Text>)}\r\n    {this.state.error &&\r\n      (<Text style={styles.text}>{this.state.error}</Text>)}\r\n  </View>\r\n\r\n  <View style={styles.mainButtons}>\r\n    <HunterButton />\r\n    <HuntedButton />\r\n  </View>\r\n\r\n</View> */}"]},"metadata":{},"sourceType":"module"}